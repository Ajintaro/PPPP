#!/usr/bin/env bash
set -euo pipefail

echo "== PPPP Process Guardrails Patch =="

backup_if_changed () {
  local path="$1"
  if [[ -f "$path" && ! -f "$path.bak" ]]; then
    cp "$path" "$path.bak"
  fi
}

# 1) FEATURE_FLAGS in src/config.js (idempotent)
CFG="src/config.js"
if [[ -f "$CFG" ]]; then
  if ! grep -q "export[[:space:]]\+const[[:space:]]\+FEATURE_FLAGS" "$CFG"; then
    backup_if_changed "$CFG"
    cat >> "$CFG" << 'EOF'

// --- Feature Flags (safe defaults) ---
export const FEATURE_FLAGS = { SPRITES_BETA: false, SIMULATION_V2: true };
EOF
    echo "FEATURE_FLAGS in src/config.js hinzugefügt."
  else
    echo "FEATURE_FLAGS bereits vorhanden – übersprungen."
  fi
else
  echo "WARN: src/config.js nicht gefunden – übersprungen."
fi

# 2) version.extra.js
mkdir -p src
BUILD_ID=$(uuidgen | cut -c1-8 2>/dev/null || echo "devbuild")
TS=$(date "+%Y-%m-%d %H:%M:%S%z")
cat > src/version.extra.js << EOF
// Auto-generated by apply-patch.sh
export const BUILD_INFO = { build: 'dev', id: '$BUILD_ID', stamped: '$TS' };
EOF
echo "src/version.extra.js geschrieben."

# 3) PR-Template
mkdir -p .github
cat > .github/pull_request_template.md << 'EOF'
## Was ist enthalten?
- [ ] Feature Flags / Beta-Toggle
- [ ] Keine Breaking Changes
- [ ] Version/Build im Menü aktualisiert (falls relevant)

## Tests
- [ ] npm start läuft
- [ ] Smoke-Test: Menü, Start, Pause

## Notes
EOF
echo ".github/pull_request_template.md aktualisiert."

# 4) CHANGELOG.md
ENTRY=$(cat << 'EOF'
## '"$(date +%Y-%m-%d)"' – Patch: Feature-Flags + Prozess
- Add FEATURE_FLAGS in src/config.js (SPRITES_BETA=false, SIMULATION_V2=true)
- Add src/version.extra.js (BUILD_INFO)
- Add PR-Template
- Add apply-patch scripts (idempotent)
EOF
)
if [[ -f "CHANGELOG.md" ]]; then
  printf "\n%s\n" "$ENTRY" >> CHANGELOG.md
else
  printf "# Changelog\n%s\n" "$ENTRY" > CHANGELOG.md
fi
echo "CHANGELOG.md aktualisiert."

echo "== Fertig. Bitte committen: =="
echo "   git add -A"
echo "   git commit -m 'chore: add feature flags + build info + pr template'"
